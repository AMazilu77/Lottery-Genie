{"ast":null,"code":"import { Router } from '@angular/router';\nimport { AuthService } from '../auth/auth.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../auth/auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/material/button\";\n\nfunction DashBoardComponent_button_19_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function DashBoardComponent_button_19_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return ctx_r3.gotoProfile();\n    });\n    i0.ɵɵtext(1, \" My profile \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction DashBoardComponent_button_20_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function DashBoardComponent_button_20_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.onLogout();\n    });\n    i0.ɵɵtext(1, \" Logout\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction DashBoardComponent_button_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"button\", 10);\n    i0.ɵɵtext(1, \" Login \");\n    i0.ɵɵelementEnd();\n  }\n} // import { AuthService } from '../services/auth.service';\n\n\nexport let DashBoardComponent = /*#__PURE__*/(() => {\n  class DashBoardComponent {\n    constructor(authService, theRouter) {\n      this.authService = authService;\n      this.theRouter = theRouter;\n      this.userIsAuthentic = false;\n      this.randomPhrase = ['Create an account and log in to save numbers and keep track of lucky numbers stats.', 'How may I serve you?', 'What is your feeble request?', 'You only get 3 wishes', 'Greed is Good.', 'Login to access full features', 'I can teach you about game theory, statistics and probability, you need only wish it!', 'Get on with it, mortal', '', 'Allow for notifications and I will alert you any time a number you played and saved wins.', 'Create an account and log in to to enjoy the full features.'];\n      this.DashBoard = [];\n    }\n\n    ngOnInit() {\n      this.userIsAuthentic = this.authService.getIsAuth();\n      this.authListenerSubscription = this.authService.getAuthStatusListener().subscribe(isAuthenticated => {\n        this.userIsAuthentic = isAuthenticated;\n      }); // this._DashBoardService.getDash()\n      //   .subscribe(\n      //     res => this.DashBoard = res,\n      //     err => {\n      //       if (err instanceof HttpErrorResponse) {\n      //         if (err.status === 401) {\n      //           this._router.navigate(['/login']);\n      //         }\n      //       }\n      //     }\n      //   );\n\n      this.randomPhraseGen();\n    }\n\n    onLogout() {\n      this.authService.logout();\n    }\n\n    ngOnDestroy() {\n      this.authListenerSubscription.unsubscribe();\n    }\n\n    gotoWinningNums() {\n      this.theRouter.navigate(['/winningNumbersStatePick']);\n    }\n\n    gotoGenerator() {\n      this.theRouter.navigate(['/LotteryNumberGenMainPage']);\n    } // gotoPlayedHistory() {\n    //   this._router.navigate(['/PlayedNumbersHistory']);\n    // }\n\n\n    gotoProfile() {\n      this.theRouter.navigate(['/profile']);\n    }\n\n    randomPhraseGen() {\n      this.phraseNumber = Math.floor(Math.random() * this.randomPhrase.length);\n      console.log(this.phraseNumber);\n\n      if (this.phraseNumber === 1) {\n        this.Phrase = this.randomPhrase[0];\n      }\n\n      if (this.phraseNumber === 2) {\n        this.Phrase = this.randomPhrase[1];\n      }\n\n      if (this.phraseNumber === 3) {\n        this.Phrase = this.randomPhrase[2];\n      }\n\n      if (this.phraseNumber === 4) {\n        this.Phrase = this.randomPhrase[3];\n      }\n\n      if (this.phraseNumber === 5) {\n        this.Phrase = this.randomPhrase[4];\n      }\n\n      if (this.phraseNumber === 6) {\n        this.Phrase = this.randomPhrase[5];\n      }\n\n      if (this.phraseNumber === 7) {\n        this.Phrase = this.randomPhrase[6];\n      }\n\n      if (this.phraseNumber === 8) {\n        this.Phrase = this.randomPhrase[7];\n      }\n\n      if (this.phraseNumber === 9) {\n        this.Phrase = this.randomPhrase[8];\n      }\n\n      if (this.phraseNumber === 10) {\n        this.Phrase = this.randomPhrase[9];\n      }\n\n      if (this.phraseNumber === 11) {\n        this.Phrase = this.randomPhrase[10];\n      }\n\n      if (this.phraseNumber === 12) {\n        this.Phrase = this.randomPhrase[11];\n      }\n\n      if (this.phraseNumber === 13) {\n        this.Phrase = this.randomPhrase[12];\n      }\n\n      if (this.phraseNumber === 14) {\n        this.Phrase = this.randomPhrase[13];\n      }\n\n      if (this.phraseNumber === 15) {\n        this.Phrase = this.randomPhrase[14];\n      }\n\n      if (this.phraseNumber === 16) {\n        this.Phrase = this.randomPhrase[15];\n      }\n\n      console.log(this.Phrase);\n    }\n\n  }\n\n  DashBoardComponent.ɵfac = function DashBoardComponent_Factory(t) {\n    return new (t || DashBoardComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n\n  DashBoardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DashBoardComponent,\n    selectors: [[\"app-dash-board\"]],\n    decls: 22,\n    vars: 4,\n    consts: [[\"rel\", \"stylesheet\", \"href\", \"https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css\", \"integrity\", \"sha384-MCw98/SFnGE8fJT3GXwEOngsV7Zt27NXFoaoApmYm81iuXoPkFOJwJ8ERdknLPMO\", \"crossorigin\", \"anonymous\"], [\"id\", \"genietext\", \"flex\", \"50\", \"layout-align\", \"center\", 1, \"pagination\", \"justify-content-center\"], [1, \"pagination\", \"justify-content-center\"], [\"id\", \"genie-dashboard-render\", \"src\", \"../assets/public/images/MainGenie.jpg\"], [1, \"button-container\"], [\"type\", \"button\", 1, \"btn\", \"btn-outline-primary\", 3, \"click\"], [\"type\", \"button\", \"class\", \"btn btn-outline-primary\", 3, \"click\", 4, \"ngIf\"], [\"type\", \"button\", \"class\", \"btn btn-outline-danger\", 3, \"click\", 4, \"ngIf\"], [\"mat-button\", \"\", \"routerLink\", \"/auth/login\", \"routerLinkActive\", \"mat-accent\", \"type\", \"button\", \"class\", \"btn btn-outline-primary\", 4, \"ngIf\"], [\"type\", \"button\", 1, \"btn\", \"btn-outline-danger\", 3, \"click\"], [\"mat-button\", \"\", \"routerLink\", \"/auth/login\", \"routerLinkActive\", \"mat-accent\", \"type\", \"button\", 1, \"btn\", \"btn-outline-primary\"]],\n    template: function DashBoardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"head\");\n        i0.ɵɵelement(1, \"link\", 0);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"body\");\n        i0.ɵɵelementStart(3, \"div\", 1);\n        i0.ɵɵelementStart(4, \"h1\");\n        i0.ɵɵtext(5, \"Why have you summoned me, Mortal? \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"br\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(7, \"br\");\n        i0.ɵɵelement(8, \"br\");\n        i0.ɵɵelementStart(9, \"div\", 2);\n        i0.ɵɵelement(10, \"img\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"p\");\n        i0.ɵɵtext(12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(13, \"hr\");\n        i0.ɵɵelementStart(14, \"div\", 4);\n        i0.ɵɵelementStart(15, \"button\", 5);\n        i0.ɵɵlistener(\"click\", function DashBoardComponent_Template_button_click_15_listener() {\n          return ctx.gotoGenerator();\n        });\n        i0.ɵɵtext(16, \" Give me numbers \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"button\", 5);\n        i0.ɵɵlistener(\"click\", function DashBoardComponent_Template_button_click_17_listener() {\n          return ctx.gotoWinningNums();\n        });\n        i0.ɵɵtext(18, \" Show numbers that have won \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(19, DashBoardComponent_button_19_Template, 2, 0, \"button\", 6);\n        i0.ɵɵtemplate(20, DashBoardComponent_button_20_Template, 2, 0, \"button\", 7);\n        i0.ɵɵtemplate(21, DashBoardComponent_button_21_Template, 2, 0, \"button\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(12);\n        i0.ɵɵtextInterpolate1(\" \", ctx.Phrase, \"\");\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngIf\", ctx.userIsAuthentic);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.userIsAuthentic);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.userIsAuthentic);\n      }\n    },\n    directives: [i3.NgIf, i4.MatButton, i2.RouterLink, i2.RouterLinkActive],\n    styles: [\".button-container[_ngcontent-%COMP%]{display:flex;justify-content:center;flex-wrap:wrap;align-items:center}.genietext[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center}#genie-dashboard-render[_ngcontent-%COMP%]{height:300px;width:auto;display:flex;justify-content:center;align-items:center}.btn[_ngcontent-%COMP%]{padding:1%;margin:1%;border:1%;border-style:solid;border-color:#000}p[_ngcontent-%COMP%]{font-style:italic;display:flex;justify-content:center;align-items:center}\"]\n  });\n  return DashBoardComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}