{"version":3,"file":"src_app_auth_auth_module_ts.js","mappings":"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","sources":["./src/app/auth/auth-routing.module.ts","./src/app/auth/auth.module.ts","./src/app/auth/login/login.component.ts","./src/app/auth/login/login.component.html","./src/app/auth/signup/signup.component.ts","./src/app/auth/signup/signup.component.html"],"sourcesContent":["import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from '@angular/router';\nimport { loginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\n\nconst routes: Routes = [\n    { path: 'login', component: loginComponent },\n    { path: 'signup', component: SignupComponent },\n]\n\n@NgModule({\n    imports: [\n        RouterModule.forChild(routes)\n    ],\n    exports: [RouterModule]\n})\n\nexport class AuthRoutingModule {}","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { AngularMaterialModule } from '../angular-material.module';\nimport { loginComponent } from './login/login.component'\nimport { SignupComponent } from './signup/signup.component'\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { AuthRoutingModule } from './auth-routing.module';\n\n\n@NgModule({\n    declarations: [\n        loginComponent,\n        SignupComponent,\n    ],\n    imports: [\n        AngularMaterialModule,\n        CommonModule,\n        FormsModule,\n        RouterModule,\n        AuthRoutingModule\n    ]\n})\n\nexport class AuthModule {}","import { Component } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../auth.service';\n\n\n@Component({\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.scss']\n})\n\nexport class loginComponent {\n    isLoading = false;\n    constructor(private router: Router, public authService: AuthService) { }\n\n    onLogin(form: NgForm) {\n        if (form.invalid) {\n            return\n        } \n        this.authService.login(form.value.email, form.value.password ) \n        console.log('logged in')\n        this.router.navigate(['/dashBoard']);\n    };\n\n  back() {\n    this.router.navigate(['/dashBoard']);\n  }\n}","\n\n<mat-card>\n  <button mat-button color='primary' (click)='back()' type=\"submit\"> Back </button>\n    <mat-spinner *ngIf=\"isLoading\"></mat-spinner>\n    <form class='log' (submit)=\"onLogin(loginForm)\" #loginForm=\"ngForm\" *ngIf=\"!isLoading\">\n    \n        <mat-form-field>\n          <input matInput name='email' ngModel type='email' placeholder=\"E-mail\" color= \"\" #emailInput=\"ngModel\" required email>\n            <mat-error *ngIf='emailInput.invalid'> Please enter a valid email. </mat-error>\n        </mat-form-field>\n    \n  \n    \n        <mat-form-field>\n         <input type=\"password\"  name='password' ngModel matInput placeholder=\"Password\" #passwordInput=\"ngModel\" required> \n            <mat-error *ngIf=\"passwordInput.invalid\">Please enter correct password. </mat-error>\n        </mat-form-field>\n        <button mat-button color='primary' type=\"submit\"> Login </button>\n        <button mat-button color='primary' routerLink='/auth/signup'> Register New Account </button>\n\n      </form>\n     \n    </mat-card>\n    \n    \n    \n    <img src='../../../assets/public/images/lamplogo.png'>","import { Component } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../auth.service';\n\n@Component({\n    templateUrl: './signup.component.html',\n    styleUrls: ['./signup.component.scss']\n})\n\nexport class SignupComponent {\n    isLoading = false;\n    constructor(public authService: AuthService, private router: Router) { }\n   \n \n\n    onSignup(form: NgForm) {\n        if (form.invalid) {\n            return;\n        }\n        this.authService.createUser(form.value.email, form.value.password);\n    }\n\n    back() {\n        this.router.navigate(['/dashBoard']);\n      }\n}","\n\n<mat-card>\n    <mat-spinner *ngIf=\"isLoading\"></mat-spinner>\n    <button mat-button color='primary' (click)='back()' type=\"submit\"> Back </button>\n    <form class='log' (submit)=\"onSignup(signupForm)\" #signupForm=\"ngForm\" *ngIf=\"!isLoading\">\n    \n        <mat-form-field>\n          <input matInput name='email' ngModel type='email' placeholder=\"E-mail\" #emailInput=\"ngModel\" required email>\n            <mat-error *ngIf='emailInput.invalid'> Please enter a valid email. </mat-error>\n        </mat-form-field>\n    \n  \n    \n        <mat-form-field>\n         <input type=\"password\"  name='password' ngModel matInput placeholder=\"Password\" #passwordInput=\"ngModel\" required> \n            <mat-error *ngIf=\"passwordInput.invalid\">Please enter a valid password. </mat-error>\n        </mat-form-field>\n        <button mat-button color='primary' type=\"submit\"> Signup </button>\n      </form>\n    </mat-card>\n    <img src='../../../assets/public/images/lamplogo.png'>\n    \n    \n    \n    "],"names":[],"sourceRoot":"webpack:///"}